/**
 * This file contains the remote getter and setter functions for the device.
 *
 * NOTICE: Auto-generated from the device's yaml file, do not edit manually!
 */
#pragma once
#include "system.hpp"

inline void emptyGetter(Data &data) {}

inline void emptySetter(const Data &data) {}

{% for object in objects %}
{% for subobject in object.get_subobjects %}
{% if subobject.get != "none" and object.remote %}
inline void get{{subobject.cpp_instance_name}}(Data &data) {
    data.{{subobject.type_code}} = {{subobject.get}}();
}
{% endif %}
{% if subobject.set != "none" and object.remote %}
inline void set{{subobject.cpp_instance_name}}(const Data &data) {
    {{subobject.set}}(data.{{subobject.type_code}});
}
{% endif %}
{% endfor %}
{% endfor %}

void (*remoteGetter[{{ subindex_count }}])(Data &data) = {
    {% for object in objects %}
    {% for subobject in object.get_subobjects %}
    {% if subobject.get != "none" and object.remote %}
    &get{{subobject.cpp_instance_name}},
    {%else%}
    emptyGetter,
    {% endif %}
    {% endfor %}
    {% endfor %}
};

void (*remoteSetter[{{ subindex_count }}])(const Data &data) = {
    {% for object in objects %}
    {% for subobject in object.get_subobjects %}
    {% if subobject.set != "none" and object.remote %}
    &set{{subobject.cpp_instance_name}},
    {%else%}
    emptySetter,
    {% endif %}
    {% endfor %}
    {% endfor %}
};
